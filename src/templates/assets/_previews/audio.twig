<div style="height:100%;width:100%;padding:5px;background:rgb(226, 234, 243);overflow-y:auto">
    <p></p>
    <span id="newChapterBtnContainer"></span>&nbsp;&nbsp;
    <span id="newSoundbiteBtnContainer"></span>&nbsp;&nbsp;
    <span id="newCaptionBtnContainer"></span>
    <p></p>
    <audio id="audioPreview" controls style="width: 100%;">
        <source src="{{ url }}" type="{{ asset.mimeType }}">
    </audio>
    <br>
    <div id="soundbiteContainer">
        <div id="soundbiteText">
            <b id="soundbiteHeader"></b>
        </div>
    </div>
    <div id="chapterContainer">
        <div id="chapterText">
            <b id="chapterHeader"></b>
        </div>
    </div>
</div>
{% js %}
    $(function () {

        var assetAudio = document.getElementById("audioPreview");
        assetAudio.volume = 0.2;

        var elementId = $("input[name='elementId']").val();
        if (!elementId) {
            return;
        }

        var data = {
            'elementId' : elementId,
            'siteId' : Craft.siteId,
        };

        $.ajax({
            method: "GET",
            url: Craft.getUrl("studio/default/get-page-context" + "?=_" + new Date().getTime()),
            data: data,
            dataType: 'json',
            success: function (context) {

                if (context.elementType == 'vnali\\studio\\elements\\Episode') {
                    var newChapterBtn = '<button type="button" id="new-chapter" class="btn submit">{{ "New Chapter"|t("studio") }}</button>';
                    var newSoundbiteBtn = '<button type="button" id="new-soundbite" class="btn submit start">{{ "Start Soundbite"|t("studio") }}</button>';
                    var newCaptionBtn = '<button type="button" id="new-caption" class="btn submit start">{{ "Start Caption"|t("studio") }}</button>';
                    
                    $('#newSoundbiteBtnContainer').html(newSoundbiteBtn);
                    $('#newChapterBtnContainer').html(newChapterBtn);
                    if (context.transcriptTextFieldHandle) {
                        $('#newCaptionBtnContainer').html(newCaptionBtn);
                    }
                    
                    // Chapter
                    var $chapterForm = 
                    $('<form class="modal fitted lazy-create-modal">' + 
                        '<div class="header">' +
                            '<h1 class="chapterHeader"></h1>' +
                        '</div>' +
                        '<div class="body">' +
                            '{{ createChapter|e("js") }}' +
                        '</div>' +
                        '<div class="footer">' +
                            '<button type="button" class="btn submit save-chapter">{{ "save"|t("studio") }}</button>' +
                        '</div>' +
                    '</form>');

                    $(".modal").on("click", "#new-chapter", function() {
                        if (context.chapterFieldType == 'verbb\\supertable\\fields\\SuperTableField') {
                            $("div[data-attribute='" + context.chapterFieldHandle + "']").find(".matrixLayoutContainer, .rowLayoutContainer, .superTable-table").next('.add').activate();
                        } else {
                            $("div[data-attribute='" + context.chapterFieldHandle + "'] button[data-type='" + context.chapterBlockTypeHandle + "']").click();
                        }

                        // Get hh:mm:ss format
                        seconds = Math.floor(assetAudio.currentTime);
                        const date = new Date(null);
                        date.setSeconds(seconds);
                        const hhmmss = date.toISOString().slice(11, 19);

                        // start time
                        if (Number.isInteger(assetAudio.currentTime)) {
                            startTimeFixed = assetAudio.currentTime;
                        } else {
                            startTimeFixed = assetAudio.currentTime.toFixed(3);
                        }

                        assetAudio.pause();

                        var modal = new Garnish.Modal($chapterForm, {
                            onHide: function () {
                                modal.destroy();
                                delete modal;
                            },
                        });

                        setTimeout(function () {
                            $chapterForm.find('.text:first').focus();
                            modal.updateSizeAndPosition();

                            $(".chapterHeader").html(hhmmss);
                        }, 100);

                        $('.save-chapter').on('click', function (ev) {
                            
                            // set chapter start time
                            if (context.chapterFieldType == 'verbb\\supertable\\fields\\SuperTableField') {
                                $("div[data-attribute='" + context.chapterFieldHandle + "'] div[data-attribute='startTime']:last input").val(startTimeFixed);
                            } else {
                                $("div[data-attribute='" + context.chapterFieldHandle + "'] div[data-type='" + context.chapterBlockTypeHandle + "'] div[data-attribute='startTime']:last input").val(startTimeFixed);
                            }

                            // set chapter title
                            chapterTitle = $('#chapterTitle').val();
                            if (context.chapterFieldType == 'verbb\\supertable\\fields\\SuperTableField') {
                                $("div[data-attribute='" + context.chapterFieldHandle + "'] div[data-attribute='chapterTitle']:last input").val(chapterTitle);
                            } else {
                                $("div[data-attribute='" + context.chapterFieldHandle + "'] div[data-type='" + context.chapterBlockTypeHandle + "'] div[data-attribute='chapterTitle']:last input").val(chapterTitle);
                            }
                            if (!$("#chapterHeader").val()) {
                                $("#chapterHeader").html("{{ 'Chapter'|t('studio') }}:<br>");
                            }
                            $("#chapterText").append(hhmmss + '-' + chapterTitle + '</br>');
                            assetAudio.play();
                            modal.hide();
                        });

                        $chapterForm.find('.cancel-btn').on('click', function () {
                            modal.hide();
                            assetAudio.play();
                        });
                    });

                    // Soundbite
                    var $soundbiteForm = 
                    $('<form class="modal fitted lazy-create-modal">' + 
                        '<div class="header">' +
                            '<h1 class="soundbiteHeader"></h1>' +
                        '</div>' +
                        '<div class="body">' +
                            '{{ createSoundbite|e("js") }}' +
                        '</div>' +
                        '<div class="footer">' +
                            '<button type="button" class="btn submit save-soundbite">{{ "save"|t("studio") }}</button>' +
                        '</div>' +
                    '</form>');

                    var startSoundbite;
                    var stopSoundbite
                    var soundbiteModal;
                    $(".modal").on("click", "#new-soundbite", function() {

                        if ($("#new-soundbite").hasClass('start')) {
                            $("#new-soundbite").html('{{ "Stop Soundbite"|t("studio") }}');
                            $("#new-soundbite").addClass('stop').removeClass('start');
                            startSoundbite = assetAudio.currentTime;
                            assetAudio.play();
                            if (context.soundbiteFieldType == 'verbb\\supertable\\fields\\SuperTableField') {
                                $("div[data-attribute='" + context.soundbiteFieldHandle + "']").find(".matrixLayoutContainer, .rowLayoutContainer, .superTable-table").next('.add').activate();
                            } else {
                                $("div[data-attribute='" + context.soundbiteFieldHandle + "'] button[data-type='" + context.soundbiteBlockTypeHandle + "']").click();
                            }

                            // start time
                            if (Number.isInteger(startSoundbite)) {
                                startTimeFixed = startSoundbite;
                            } else {
                                startTimeFixed = startSoundbite.toFixed(3);
                            }
                        } else if ($("#new-soundbite").hasClass('stop')) {
                            $("#new-soundbite").addClass('start').removeClass('stop');
                            $("#new-soundbite").html('{{ "Start Soundbite"|t("studio") }}');
                            stopSoundbite = assetAudio.currentTime;
                            assetAudio.pause();

                            duration = stopSoundbite - startSoundbite;
                            // Get hh:mm:ss format
                            seconds = Math.floor(duration);
                            const date = new Date(null);
                            date.setSeconds(seconds);
                            const hhmmss = date.toISOString().slice(11, 19);

                            if (Number.isInteger(duration)) {
                                durationFixed = duration;
                            } else {
                                durationFixed = duration.toFixed(3);
                            }

                            soundbiteModal = new Garnish.Modal($soundbiteForm, {
                                onHide: function () {
                                    soundbiteModal.destroy();
                                    delete soundbiteModal;
                                },
                            });

                            setTimeout(function () {
                                $soundbiteForm.find('.text:first').focus();
                                soundbiteModal.updateSizeAndPosition();

                                $(".soundbiteHeader").html("{{ 'Duration'|t('studio')}}" + ': ' + hhmmss);
                            }, 100);
                        }

                        $('.save-soundbite').on('click', function (ev) {

                            // set soundbite start time
                            if (context.soundbiteFieldType == 'verbb\\supertable\\fields\\SuperTableField') {
                                $("div[data-attribute='" + context.soundbiteFieldHandle + "'] div[data-attribute='startTime']:last input").val(startTimeFixed);
                            } else {
                                $("div[data-attribute='" + context.soundbiteFieldHandle + "'] div[data-type='" + context.soundbiteBlockTypeHandle + "'] div[data-attribute='startTime']:last input").val(startTimeFixed);
                            }

                            // set soundbite duration
                            if (context.soundbiteFieldType == 'verbb\\supertable\\fields\\SuperTableField') {
                                $("div[data-attribute='" + context.soundbiteFieldHandle + "'] div[data-attribute='duration']:last input").val(durationFixed);
                            } else {
                                $("div[data-attribute='" + context.soundbiteFieldHandle + "'] div[data-type='" + context.soundbiteBlockTypeHandle + "'] div[data-attribute='duration']:last input").val(durationFixed);
                            }

                            // set soundbite title
                            soundbiteTitle = $('#soundbiteTitle').val();
                            if (context.soundbiteFieldType == 'verbb\\supertable\\fields\\SuperTableField') {
                                $("div[data-attribute='" + context.soundbiteFieldHandle + "'] div[data-attribute='soundbiteTitle']:last input").val(soundbiteTitle);
                            } else {
                                $("div[data-attribute='" + context.soundbiteFieldHandle + "'] div[data-type='" + context.soundbiteBlockTypeHandle + "'] div[data-attribute='soundbiteTitle']:last input").val(soundbiteTitle);
                            }
                            if (!$("#soundbiteHeader").val()) {
                                $("#soundbiteHeader").html("{{ 'Soundbite'|t('studio') }}:<br>");
                            }
                            $("#soundbiteText").append(startSoundbite + ' - ' + stopSoundbite + ' - ' + soundbiteTitle + '</br>');
                            assetAudio.play();
                            soundbiteModal.hide();
                        });

                        $soundbiteForm.find('.cancel-btn').on('click', function () {
                            soundbiteModal.hide();
                            assetAudio.play();
                        });
                    });

                    // Caption
                    var $captionForm = 
                    $('<form class="modal fitted lazy-create-modal">' + 
                        '<div class="header">' +
                            '<h1 class="captionHeader"></h1>' +
                        '</div>' +
                        '<div class="body">' +
                            '{{ createCaption|e("js") }}' +
                            '<button type="button" class="btn submit add-speaker">{{ "Add Speaker"|t("studio") }}</button>' +
                        '</div>' +
                        '<div class="footer">' +
                            '<button type="button" class="btn submit save-caption">{{ "save"|t("studio") }}</button>' +
                        '</div>' +
                    '</form>');

                    var startCaption;
                    var stopCaption
                    var captionModal;
                    $(".modal").on("click", "#new-caption", function() {
                        if (typeof select !== 'undefined') {
                            select.destroy();
                        }
                        if ($("#new-caption").hasClass('start')) {
                            $("#new-caption").html('{{ "Stop Caption"|t("studio") }}');
                            $("#new-caption").addClass('stop').removeClass('start');
                            startCaption = assetAudio.currentTime;
                            assetAudio.play();

                            // start time
                            if (Number.isInteger(startCaption)) {
                                startCaption = startCaption;
                            } else {
                                startCaption = startCaption.toFixed(3);
                            }
                        } else if ($("#new-caption").hasClass('stop')) {
                            $("#new-caption").addClass('start').removeClass('stop');
                            $("#new-caption").html('{{ "Start Caption"|t("studio") }}');
                            stopCaption = assetAudio.currentTime;
                            assetAudio.pause();

                            duration = stopCaption - startCaption;
                            // Get hh:mm:ss format
                            seconds = Math.floor(duration);
                            const date = new Date(null);
                            date.setSeconds(seconds);
                            const hhmmss = date.toISOString().slice(11, 19);

                            if (Number.isInteger(duration)) {
                                durationFixed = duration;
                            } else {
                                durationFixed = duration.toFixed(3);
                            }

                            captionModal = new Garnish.Modal($captionForm, {
                                onHide: function () {
                                    captionModal.destroy();
                                    delete captionModal;
                                },
                            });

                            setTimeout(function () {
                                $captionForm.find('.text:first').focus();
                                captionModal.updateSizeAndPosition();

                                $(".captionHeader").html("{{ 'Duration'|t('studio')}}" + ': ' + hhmmss);
                            }, 100);

                            // Update speakers
                            
                            // Destroy drop down if exist, otherwise selectize wont work if modal open for second time
                            $('#captionSpeaker').selectize()[0].selectize.destroy();

                            var $select = $('#captionSpeaker').selectize({
                                dropdownParent: 'body',
                                create: true,
                            });

                            var select = $select.get(0).selectize;
                            $.each(context.speakers, function(i, item) {
                                select.addOption({
                                    value: item.value,
                                    text: item.label
                                });
                            });
                            
                            speakers = $("body").data("speakers");
                            if (typeof speakers !== "undefined") {
                                var storedSpeakers = JSON.parse(speakers);
                                $.each(storedSpeakers, function(i, item) {
                                    select.addOption({
                                        value: item,
                                        text: item
                                    });
                                });
                            }
                            //
                        }

                        $('.add-speaker').on('click', function (ev) {
                            var textareaVal = '';
                            if ($('#caption').val()) {
                                textareaVal = $('#caption').val() + '\n';
                            }
                            $('#caption').val(textareaVal + '<v ' + $('#captionSpeaker').val() + '></v>');
                        });

                        // New caption
                        $('.save-caption').on('click', function (ev) {
                            speaker = $('#captionSpeaker').val();
                            caption = $('#caption').val();
                            $('#caption').val('');
                            
                            // Save as json
                            var segment = {
                                speaker: speaker,
                                startTime: startCaption,
                                endTime: stopCaption,
                                body: caption 
                            };

                            // Pass new caption and current caption and get SRT format
                            var caption = $('#fields-' + context.transcriptTextFieldHandle).val();
                            window.csrfTokenName = "{{ craft.app.config.general.csrfTokenName|e('js') }}";
                            window.csrfTokenValue = "{{ craft.app.request.csrfToken|e('js') }}";
                            var data = {
                                'newCaption' : JSON.stringify(segment),
                                'caption': caption
                            };
                            data[csrfTokenName] = csrfTokenValue;
                            $.ajax({
                                method: "POST",
                                url: Craft.getUrl("studio/episodes/transcript-content" + "?=_" + new Date().getTime()),
                                data: data,
                                success: function (captionContent) {
                                    // Keep srt in field
                                    $('#fields-' + context.transcriptTextFieldHandle).val(captionContent);
                                }
                            });

                            // Keep new speaker if there is a new one
                            if (typeof storedSpeakers === "undefined") {
                                storedSpeakers = [];
                            }
                            if (speaker && jQuery.inArray(speaker, storedSpeakers) === -1) {
                                storedSpeakers.push(speaker);
                            }
                            $("body").data("speakers", JSON.stringify(storedSpeakers));
                            //

                            select.destroy();
                            captionModal.hide();
                        });

                        $captionForm.find('.cancel-btn').on('click', function () {
                            captionModal.hide();
                            select.destroy();
                            assetAudio.play();
                        });
                    });
                }
            }
        });
    });
{% endjs %}
